const o=()=>{try{const e=document.createElement("canvas");return!!(e.getContext("webgl2")||e.getContext("webgl")||e.getContext("experimental-webgl"))}catch{return!1}},s=()=>{const e=document.createElement("canvas"),t=e.getContext("webgl2")||e.getContext("webgl")||e.getContext("experimental-webgl");if(!t||!("getSupportedExtensions"in t))return{supported:!1,version:0,maxTextureSize:0,maxVertexUniforms:0,maxFragmentUniforms:0,extensions:[]};const n=t,a=n.getSupportedExtensions()||[];return{supported:!0,version:t instanceof WebGL2RenderingContext?2:1,maxTextureSize:n.getParameter(n.MAX_TEXTURE_SIZE),maxVertexUniforms:n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),maxFragmentUniforms:n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),extensions:a}},r=()=>{const e=s();return e.supported?e.version<2||e.maxTextureSize<2048||e.maxVertexUniforms<128:!0},i=()=>{const e=r(),t=s();return{antialias:!e,shadows:!e,pixelRatio:e?1:Math.min(window.devicePixelRatio,2),maxLights:e?2:4,textureSize:e?512:1024,enablePostProcessing:!e&&t.extensions.includes("OES_texture_float")}};export{s as a,o as d,i as g};
